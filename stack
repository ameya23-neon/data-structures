#include<iostream>
#include<string>
using namespace std;
class stack
{
	int top;
	int arr[5];
public:
	stack()
	{
		top = -1;
		for (int i = 0; i < 4; i++)
		{
			arr[i] = 0;
		}
	}
	bool isEmpty()
	{
		if (top == -1)
		{
			return true;
		}
		else
			return false;
	}
	bool isFull()
	{
		if (top == 4)
		{
			return true;
		}
		else
			return false;
	}
	void push(int val)
	{
		if (isFull())
		{
			cout << "The stack is full" << endl;
		}
		else
		{
			top++;
			arr[top] = val;
		}
	}
	int pop()
	{
		if (isEmpty())
		{
			cout << "The stack is empty" << endl;
		}
		else
		{
			int popvalue = arr[top];
			arr[top] = 0;
			top--;
			return popvalue;
		}
	}
	int count()
	{
		return(top + 1);
	}
	int peek(int pos)
	{
		if (isEmpty())
		{
			cout << "The stack is empty";
		}
		else
		{
			return arr[pos];
		}
	
	}
	void change(int pos, int val)
	{
		arr[pos] = val;
		cout << "The value is " << val << " at positon " << pos << endl;
	}
	void display()
	{
		cout << "All the values in stack are ";
		for (int i = 4; i >= 0; i--)
		{
			cout << arr[i] << endl;
		}
	}
};
int main()
{
	stack s1;
	int option, position, value;
	do
	{
		cout << "What operation do you want to perform. " << endl;
		cout << "1. push()" << endl;
		cout << "2. pop()" << endl;
		cout << "3. isEmpty()" << endl;
		cout << "4. isFull()" << endl;
		cout << "5. peek()" << endl;
		cout << "6. count()" << endl;
		cout << "7. change()" << endl;
		cout << "8. display()" << endl;
		cout << "9. clear screen" << endl;

		cin >> option;
		switch (option)
		{
		case 1:
			cout << "Enter the value you want to push" << endl;
			cin >> value;
			s1.push(value);
			break;
		case 2:
			cout << "Pop function called-poped value is " << s1.pop() << endl;
			break;
		case 3:
			if (s1.isEmpty())
			{
				cout << "The stack is empty " << endl;
			}
			else
				cout << "the stack is not empty " << endl;
			break;
		case 4:
			if (s1.isFull())
			{
				cout << "The stack is full " << endl;
			}
			else
				cout << "The stack is not full" << endl;
			break;
		case 5:
		{
			cout << "The the position you want to peek " << endl;
			cout << "Peek function called- " << endl << s1.peek(position) << endl;
			break;
		}
		case 6:
			cout << "Count function called- " << s1.count() << endl;
			break;
		case 7:
			cout << "Change function called " << endl;
			cout << "Enter position of item you want to change " << endl;
			cin >> position;
			cout << endl;
			cout << "Enter the value you want to change " << endl;
			cin >> value;
			s1.change(position, value);
			break;
		case 8:
			cout << "Display function called- " << endl;
			s1.display();
			break;
		case 9:
			system("cls");
			break;
		default:
			cout << "Enter proper option number" << endl;
		}
	} while (option != 0);
		return 0;



}
